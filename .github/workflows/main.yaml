name: OpenAPI Petstore CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read
      
jobs:
  provision:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::787447617781:role/GitHubOIDCProvider-Role-JS87T28CV38Y
        aws-region: ap-southeast-1
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.3
    
    - name: Terraform Init
      run: terraform init
      working-directory: terraform
      
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: terraform
      
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: terraform
    
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '8'
        cache: maven
        
    - name: Build with Maven
      run: mvn clean package
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::787447617781:role/GitHubOIDCProvider-Role-JS87T28CV38Y
        aws-region: ap-southeast-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: openapi-petstore
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
