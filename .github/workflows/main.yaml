name: OpenAPI Petstore CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-southeast-1

jobs:
  provision:
    runs-on: ubuntu-latest
    env:
      TF_VAR_aws_region: $AWS_REGION
      TF_VAR_aws_opensearch_allow_ip: ${{ secrets.AWS_OPENSEARCH_ALLOW_IP }}
      TF_VAR_aws_grafana_sso_user_email: ${{ secrets.AWS_GRAFANA_SSO_USER_EMAIL }}

    defaults:
      run:
        working-directory: terraform
    
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.4

    - name: Terraform Format
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '8'
        cache: maven

    - name: Build with Maven
      run: mvn clean package

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: openapi-petstore
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
  
  deploy:
    runs-on: ubuntu-latest
    needs: [provision, build]
    
    defaults:
      run:
        working-directory: kubernetes
    
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure kubectl
        run: aws eks update-kubeconfig --name openapi-petstore --region ${{ env.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          sed -ie 's/IMAGE_TAG/${{ github.sha }}/g' openapi-petstore.yaml
          kubectl apply -f .

  snyk:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - uses: actions/checkout@v3

      - name: Run Snyk to check configuration files for security issues
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: .
        continue-on-error: true

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
